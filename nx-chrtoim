#!/usr/bin/python3
import sys
import PIL.Image

defpal = [
	0x053f2f00, 0x00383400,
	0x003c0c00, 0x003f3c00,
	0x003f2a15, 0x003f2a15,
	0x003f2a15, 0x003f2a15
]

def loadrom(fp, nrom, mlen):
	lout = []
	sbuf = ""
	st = 0

	fp.seek(0)
	for line in fp:
		line = line.translate(str.maketrans("", "", "\t\n\r "))
		if st:
			if line.startswith("#"):
				break

			sbuf += line
			while len(sbuf) >= mlen:
				lout.append(int(sbuf[:mlen], 16))
				sbuf = sbuf[mlen:]

		if line.startswith("#") and int(line[1:].split(":")[0]) == nrom:
			st = 1
	return lout

def putchr(chr, im):
	pixels = im.load()

	sx = sy = 0
	for c in chr:
		for y in range(8):
			for x in range(8):
				hi = c >> (x + y * 8) & 1
				lo = c >> (x + y * 8 + 64) & 1
				pixels[7 - x + sx, 7 - y + sy] = lo | hi << 1
		sx += 8
		if sx >= 128:
			sy += 8
			sx = 0

def putnpal(pal, npal, im):
	lclr = []
	for nclr in range(4):
		if nclr == 0:
			rgb = pal[0] >> 24 & 0xff
		else:
			rgb = pal[npal] >> (24 - nclr * 8) & 0xff
		lclr.append((rgb >> 4 & 3) * 80 + 15)
		lclr.append((rgb >> 2 & 3) * 80 + 15)
		lclr.append((rgb      & 3) * 80 + 15)
	im.putpalette(lclr)

def saveim(im, fname):
	if fname.lower().endswith((".png", ".gif", ".bmp")):
		im.save(fname)
	else:
		im.save(fname + ".png")

if __name__ == "__main__":
	if len(sys.argv) < 3:
		sys.exit("usage: %s nxfile imagefile [palidx [palrom [chrom [bgrom]]]]" % sys.argv[0])
	else:
		nxfile = sys.argv[1]
		imfile = sys.argv[2]
	if len(sys.argv) > 3:
		palidx = int(sys.argv[3])
	else:
		palidx = 0
	if len(sys.argv) > 4:
		palrom = int(sys.argv[4])
	else:
		palrom = 1
	if len(sys.argv) > 5:
		chrom = int(sys.argv[5])
	else:
		chrom = 2
	if len(sys.argv) > 6:
		bgrom = int(sys.argv[6])
	else:
		bgrom = 3

	fp = open(nxfile, "r")
	lpal = loadrom(fp, palrom, 8)
	lchr = loadrom(fp, chrom, 32)

	if len(lpal) <= palidx:
		lpal = defpal

	im = PIL.Image.new("P", (128, 128))

	putnpal(lpal, palidx, im)
	putchr(lchr, im)

	saveim(im, imfile)
