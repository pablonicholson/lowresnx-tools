#!/usr/bin/python3
import sys
import PIL.Image

if len(sys.argv) < 2:
	sys.exit("usage: %s imagefile [pal]" % sys.argv[0])
else:
	fname = sys.argv[1]
if len(sys.argv) > 2:
	pal = int(sys.argv[2])
else:
	pal = 0

img = PIL.Image.open(fname)
img = img.convert("P", dither=0, palette=1, colors=4)
img = img.resize((160, 128))

pixels = img.load()
width, height = 160, 128

lchr = []
lchr.append(0)

lbg = []
lbg.append(0)
lbg.append(0)
lbg.append(20)
lbg.append(16)

for sy in range(0, height, 8):
	for sx in range(0, width, 8):
		c1 = c2 = c3 = c4 = 0
		for y in range(8):
			for x in range(8):
				p1 = pixels[7 - x + sx, 7 - y + sy]
				p2 = pixels[    x + sx, 7 - y + sy]
				p3 = pixels[7 - x + sx,     y + sy]
				p4 = pixels[    x + sx,     y + sy]
				c1 |= ((p1 & 1) << x + 64 | (p1 >> 1 & 1) << x) << y * 8
				c2 |= ((p2 & 1) << x + 64 | (p2 >> 1 & 1) << x) << y * 8
				c3 |= ((p3 & 1) << x + 64 | (p3 >> 1 & 1) << x) << y * 8
				c4 |= ((p4 & 1) << x + 64 | (p4 >> 1 & 1) << x) << y * 8
		if c1 in lchr:
			lbg.append(lchr.index(c1))
			lbg.append(pal | 0x00)
		elif c2 in lchr:
			lbg.append(lchr.index(c2))
			lbg.append(pal | 0x08)
		elif c3 in lchr:
			lbg.append(lchr.index(c3))
			lbg.append(pal | 0x10)
		elif c4 in lchr:
			lbg.append(lchr.index(c4))
			lbg.append(pal | 0x18)
		else:
			lbg.append(len(lchr))
			lbg.append(pal | 0x00)
			lchr.append(c1)

sys.stdout.write("#2:CHR\n")
for c in lchr:
	sys.stdout.write("%032X" % c)
sys.stdout.write("\n")

sys.stdout.write("#3:BG\n")
for c in lbg:
	sys.stdout.write("%02X" % c)
sys.stdout.write("\n")
