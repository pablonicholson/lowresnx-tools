#!/usr/bin/python3
import sys
import PIL.Image

if len(sys.argv) < 2:
	exit("usage: %s imagefile [palette]" % sys.argv[0])
if len(sys.argv) > 2:
	pal = int(sys.argv[2])
else:
	pal = 0

img = PIL.Image.open(sys.argv[1])
img = img.convert("P", dither=0, palette=1, colors=4)
img = img.resize((160, 128))

pixel = img.load()

lch = []
lch.append(0)

lbg = []
lbg.append(0)
lbg.append(0)
lbg.append(20)
lbg.append(16)

for sy in range(0, 128, 8):
	for sx in range(0, 160, 8):
		ch0 = ch1 = ch2 = ch3 = 0
		for y in range(8):
			for x in range(8):
				px0 = pixel[7 - x + sx,     y + sy]
				px1 = pixel[    x + sx,     y + sy]
				px2 = pixel[7 - x + sx, 7 - y + sy]
				px3 = pixel[    x + sx, 7 - y + sy]
				ch0 |= (((px0 & 1) << (x+64)) | (((px0 >> 1) & 1) << x)) << ((7-y) * 8)
				ch1 |= (((px1 & 1) << (x+64)) | (((px1 >> 1) & 1) << x)) << ((7-y) * 8)
				ch2 |= (((px2 & 1) << (x+64)) | (((px2 >> 1) & 1) << x)) << ((7-y) * 8)
				ch3 |= (((px3 & 1) << (x+64)) | (((px3 >> 1) & 1) << x)) << ((7-y) * 8)
		if ch0 in lch:
			lbg.append(lch.index(ch0))
			lbg.append(pal | 0x00)
		elif ch1 in lch:
			lbg.append(lch.index(ch1))
			lbg.append(pal | 0x08)
		elif ch2 in lch:
			lbg.append(lch.index(ch2))
			lbg.append(pal | 0x10)
		elif ch3 in lch:
			lbg.append(lch.index(ch3))
			lbg.append(pal | 0x18)
		else:
			lbg.append(len(lch))
			lbg.append(pal | 0x00)
			lch.append(ch0)

sys.stdout.write("#2:CHR\n")
for c in lch:
	sys.stdout.write("%032X" % c)
sys.stdout.write("\n")

sys.stdout.write("#3:BG\n")
for b in lbg:
	sys.stdout.write("%02X" % b)
sys.stdout.write("\n")
